<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.javatiaocao.myblog.mapper.ArticleMapper"><!-- 命名空间，用来找到对应的xml文件 -->

    <insert id="saveArticle">
        INSERT INTO article (
            articleId,
            author,
            originalAuthor,
            articleTitle,
            publishDate,
            updateDate,
            articleContent,
            articleTags,
            articleType,
            articleCategories,
            articleUrl,
            articleTabloid,
            likes,
            lastArticleId,
            nextArticleId
        )
        VALUES
        ( #{articleId},#{author},#{originalAuthor},#{articleTitle},#{publishDate},#{updateDate},#{articleContent},#{articleTags},#{articleType},#{articleCategories},#{articleUrl},#{articleTabloid},#{likes},#{lastArticleId},#{nextArticleId})
    </insert>


    <select id="getArticleManagement" resultType="com.javatiaocao.myblog.model.Article">
      select * from article order by id desc
    </select>

    <select id="getArticleById" resultType="com.javatiaocao.myblog.model.Article">
      select * from article where  id = #{id}
    </select>

    <select id="getArticleByIntId" resultType="com.javatiaocao.myblog.model.Article">
      select * from article where  id = #{id}
    </select>

   <update id="updateLastNextId">
       update article set ${lastOrNextStr} = #{updateId} where articleId = #{articleId}
   </update>

   <update id="updateArticleById">
       UPDATE article
       SET originalAuthor = #{originalAuthor},articleTitle=#{articleTitle},updateDate=#{updateDate},articleContent=#{articleContent},articleTags=#{articleTags},articleType=#{articleType},articleCategories=#{articleCategories},articleUrl=#{articleUrl},articleTabloid=#{articleTabloid} where id=#{id}
   </update>

    <delete id="deleteArticle">
        delete from article where articleId  = #{articleId}
    </delete>

    <select id="getArticleTitleByArtileId" resultType="java.lang.String">
     select articleTitle from article where articleId  = #{articleId}
    </select>

    <select id="getArticleAuthorByArtileId" resultType="java.lang.String">
     select * from article where articleId  = #{articleId}
    </select>

    <select id="getArticleByAticleId" resultType="com.javatiaocao.myblog.model.Article" >
        select * from article where articleId  = #{articleId}
    </select>

    <select id="countArticleNum" resultType="java.lang.Integer">
        select count(*) from  article
    </select>

    <update id="updateLikeByArticleId">
        update article set likes = likes+1 where articleId  = #{articleId}
    </update>

    <select id="queryLiksByarticle" resultType="java.lang.Integer">
       select IFNULL(max(likes),0) from article where articleId  = #{articleId}
    </select>

    <select id="countArticleNumByCategory" resultType="java.lang.String">
        select count(*) from article where articleCategories = #{categoryName}
    </select>
</mapper>
